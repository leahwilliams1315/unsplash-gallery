{"version":3,"sources":["components/AppHeader.js","components/AppDrawer.js","components/AppGallery.js","components/AppDialog.js","utilities/util.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","display","breakpoints","up","appBarShift","width","marginLeft","transition","transitions","create","easing","easeOut","duration","enteringScreen","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","AppHeader","onSearchKeyUp","onMenuClick","shrinkAppHeader","headerText","classes","AppBar","className","clsx","appBar","Toolbar","IconButton","aria-label","onClick","edge","hide","Typography","data-testid","variant","noWrap","InputBase","onKeyUp","placeholder","root","input","inputProps","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","AppDrawer","isOpen","onChevronClick","children","useTheme","Drawer","anchor","open","paper","direction","Divider","createStyles","gridList","margin","AppGallery","GridList","cellHeight","cols","Transition","React","forwardRef","props","ref","AppDialog","onClose","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogActions","Button","convertSelectedImgObj","selectedImage","bestTitle","sponsorship","tagline","alt_description","length","description","createdAt","created_at","altDescription","downloadLink","urls","raw","regularImgLink","regular","unsplash","Unsplash","accessKey","App","useState","imageSearchResults","updateImageSearchResults","openDrawer","setDrawerState","setHeaderText","isDialogOpen","setDialogState","setSelectedImage","requestImages","queryString","photos","then","res","json","results","map","useEffect","List","text","index","ListItem","button","ListItemText","primary","e","key","target","value","inputImageSearch","imgObj","GridListTile","src","alt","DialogContentText","style","Date","toLocaleDateString","href","rel","download","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iaAaMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,WAAY,CACVC,YAAaF,EAAMG,QAAQ,IAE7BC,MAAM,aACJC,SAAU,EACVC,QAAS,QACRN,EAAMO,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,YAAa,CACXC,MAAM,eAAD,OAdW,IAcX,OACLC,WAfgB,IAgBhBC,WAAYZ,EAAMa,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQf,EAAMa,YAAYE,OAAOC,QACjCC,SAAUjB,EAAMa,YAAYI,SAASC,kBAGzCC,OAAO,aACLC,SAAU,WACVC,aAAcrB,EAAMsB,MAAMD,aAC1BE,gBAAiBC,YAAKxB,EAAMyB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKxB,EAAMyB,QAAQC,OAAOC,MAAO,MAEpDhB,WAAY,EACZD,MAAO,QACNV,EAAMO,YAAYC,GAAG,MAAQ,CAC5BG,WAAYX,EAAMG,QAAQ,GAC1BO,MAAO,SAGXkB,WAAY,CACVC,QAAS7B,EAAMG,QAAQ,EAAG,GAC1B2B,OAAQ,OACRV,SAAU,WACVW,cAAe,OACfzB,QAAS,OACT0B,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTP,QAAS7B,EAAMG,QAAQ,EAAG,EAAG,EAAG,GAEhCkC,YAAY,cAAD,OAAgBrC,EAAMG,QAAQ,GAA9B,OACXS,WAAYZ,EAAMa,YAAYC,OAAO,SACrCJ,MAAO,QACNV,EAAMO,YAAYC,GAAG,MAAQ,CAC5BE,MAAO,OACP,UAAW,CACTA,MAAO,cAMF4B,EAAY,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,WAChEC,EAAU7C,IAEhB,OACE,cAAC8C,EAAA,EAAD,CACExB,SAAS,SACTyB,UAAWC,YAAKH,EAAQI,OAAT,eACZJ,EAAQlC,YAAcgC,IAH3B,SAKE,eAACO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEd,MAAM,UACNe,aAAW,iBACXC,QAASX,EACTY,KAAK,QACLP,UAAWC,YAAKH,EAAQ1C,WAAYwC,GAAmBE,EAAQU,MALjE,SAOE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYT,UAAWF,EAAQvC,MAAOmD,cAAY,mBAAmBC,QAAQ,KAAKC,QAAM,EAAxF,SACGf,IAEH,sBAAKG,UAAWF,EAAQxB,OAAxB,UACE,qBAAK0B,UAAWF,EAAQf,WAAxB,SACE,cAAC,IAAD,MAEF,cAAC8B,EAAA,EAAD,CACEC,QAASpB,EACTqB,YAAY,eACZjB,QAAS,CACPkB,KAAMlB,EAAQT,UACd4B,MAAOnB,EAAQP,YAEjB2B,WAAY,CAAE,aAAc,qB,oEC9FlCjE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCgE,OAAQ,CACNtD,MAJgB,IAKhBuD,WAAY,GAEdC,YAAa,CACXxD,MARgB,KAUlByD,aAAa,yBACX7D,QAAS,OACT0B,WAAY,SACZH,QAAS7B,EAAMG,QAAQ,EAAG,IAEvBH,EAAMoE,OAAOC,SALN,IAMVpC,eAAgB,iBAIPqC,EAAY,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,SAC3C9B,EAAU7C,IACVE,EAAQ0E,cAEd,OACE,eAACC,EAAA,EAAD,CACEpB,cAAY,aACZV,UAAWF,EAAQqB,OACnBR,QAAQ,aACRoB,OAAO,OACPC,KAAMN,EACN5B,QAAS,CACPmC,MAAOnC,EAAQuB,aAPnB,UAUE,sBAAKrB,UAAWF,EAAQwB,aAAxB,UACE,cAACb,EAAA,EAAD,+BACA,cAACL,EAAA,EAAD,CAAYE,QAASqB,EAArB,SACuB,QAApBxE,EAAM+E,UAAsB,cAAC,IAAD,IAAsB,cAAC,IAAD,SAGvD,cAACC,EAAA,EAAD,IACCP,M,kBChDD3E,EAAYC,aAAW,SAACC,GAAD,OAC3BiF,YAAa,CACXC,SAAU,CACRxE,MAAO,QACPoB,OAAO,qBACPqD,OAAQ,sBAKDC,EAAa,SAAC,GAAgB,IAAfX,EAAc,EAAdA,SACpB9B,EAAU7C,IAChB,OACE,cAACuF,EAAA,EAAD,CACEC,WAAY,IACZzC,UAAWF,EAAQuC,SACnBK,KAAM,EAHR,SAIGd,K,qDCbDe,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC7D,OAAO,cAAC,IAAD,aAAMb,UAAU,KAAKa,IAAKA,GAASD,OAG/BE,EAAY,SAAC,GAAwC,IAAvCtB,EAAsC,EAAtCA,OAAQuB,EAA8B,EAA9BA,QAASrB,EAAqB,EAArBA,SAAUrE,EAAW,EAAXA,MACpD,OACI,eAAC2F,EAAA,EAAD,CACElB,KAAMN,EACNyB,oBAAqBR,EACrBS,aAAW,EACXH,QAASA,EACTI,kBAAgB,qBAChBC,mBAAiB,2BANnB,UAQE,cAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,SAAsCjG,IACtC,cAACkG,EAAA,EAAD,UACG7B,IAEH,cAAC8B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQrD,QAAS2C,EAAS3D,MAAM,UAAhC,yBC1BGsE,EAAwB,SAACC,GAAmB,IAAD,MAEhDC,GAAY,UAAAD,EAAcE,mBAAd,eAA2BC,YAC1C,UAAAH,EAAcI,uBAAd,eAA+BC,SAA/B,UAAwCL,EAAcM,mBAAtD,aAAwC,EAA2BD,QACpEL,EAAcI,gBAAkBJ,EAAcM,aAEhD,MAAO,CACL7E,MAAOuE,EAAcvE,MACrB8E,UAAWP,EAAcQ,WACzBF,YAAaL,EACbQ,eAAgBT,EAAcI,gBAC9BM,aAAa,GAAD,OAAKV,EAAcW,KAAKC,IAAxB,QACZC,eAAgBb,EAAcW,KAAKG,QACnCnB,GAAIK,EAAcL,KCGhBoB,GAAW,IAAIC,IAAS,CAACC,UAAW,gDA0G3BC,OAxGf,WACE,IADa,EAG0CC,mBAAS,IAHnD,mBAGNC,EAHM,KAGcC,EAHd,OAIwBF,oBAAS,GAJjC,mBAING,EAJM,KAIMC,EAJN,OAKuBJ,mBAAS,gBALhC,mBAKNnF,EALM,KAKMwF,EALN,OAM0BL,oBAAS,GANnC,mBAMNM,EANM,KAMQC,EANR,OAO6BP,mBAAS,IAPtC,mBAONnB,EAPM,KAOS2B,EAPT,KASPC,EAAgB,SAACC,GAAD,OACpBd,GAAStG,OAAOqH,OAAOD,EAAa,EAAG,IACpCE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACC,GACLX,EAAyBW,EAAIE,QAAQC,IAAIpC,QAY/C,OALAqC,qBAAU,WACRR,EAAc,UACb,IAID,sBAAKzF,UAAU,MAAf,UACE,cAAC,EAAD,CACE0B,OAAQyD,EACRxD,eAAgB,kBAAMyD,GAAe,IAFvC,SAIE,cAACc,EAAA,EAAD,UA9BkB,CAAC,QAAS,SAAU,YAAa,QAAS,UAAW,SA+BpDF,KAAI,SAACG,EAAMC,GAAP,OACnB,cAACC,EAAA,EAAD,CACE/F,QAAS,WACPmF,EAAcU,GACdd,EAAcc,GACdf,GAAe,IAEjBkB,QAAM,EANR,SAQE,cAACC,EAAA,EAAD,CAAcC,QAASL,KADlBA,UAMb,cAAC,EAAD,CACEtG,WAAYA,EACZD,gBAAiBuF,EACjBxF,YAAa,kBAAMyF,GAAgBD,IACnCzF,cAAe,SAAC+G,IAlCG,SAACA,GAAgB,UAAVA,EAAEC,KAC9BjB,EAAcgB,EAAEE,OAAOC,OAkCnBC,CAAiBJ,GACjBpB,EAAcoB,EAAEE,OAAOC,UAG3B,cAAC,EAAD,UACG3B,EAAmBe,KAAI,SAACc,GAAD,OACtB,cAACC,EAAA,EAAD,CACE/G,UAAU,iBACVM,QAAS,WACPkF,EAAiBsB,GACjBvB,GAAe,IAGjB7C,KAAM,EAPR,SAQE,qBACEsE,IAAKF,EAAOpC,eACZuC,IAAKH,EAAOxC,kBAJTwC,EAAOtD,SAQlB,cAAC,EAAD,CACEjG,MAAOsG,EAAcM,aAAe,WACpCzC,OAAQ4D,EACRrC,QAAS,WACPsC,GAAe,IAJnB,SAOE,eAAC2B,EAAA,EAAD,CAAmB1D,GAAG,2BAAtB,UACE,uBAAMxD,UAAU,kBAAhB,UACE,0DACA,sBAAMmH,MAAO,CAACzI,gBAAiBmF,EAAcvE,OAAQU,UAAU,mBAEjE,uBAAMA,UAAU,kBAAhB,UACE,mDACA,qCAAS,IAAIoH,KAAKvD,EAAcO,WAAYiD,qBAA5C,UAEF,uBAAMrH,UAAU,kBAAhB,UACE,mDACA,mBACEsH,KAAMzD,EAAcU,aACpBgD,IAAI,aACJZ,OAAO,SACPa,UAAQ,EAJV,oCChGGC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.e1d060e9.chunk.js","sourcesContent":["import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport const AppHeader = ({onSearchKeyUp, onMenuClick, shrinkAppHeader, headerText}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      position=\"static\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: shrinkAppHeader,\n      })}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"hamburger menu\"\n          onClick={onMenuClick}\n          edge=\"start\"\n          className={clsx(classes.menuButton, shrinkAppHeader && classes.hide)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography className={classes.title} data-testid=\"app-header-title\" variant=\"h6\" noWrap>\n          {headerText}\n        </Typography>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            onKeyUp={onSearchKeyUp}\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n          />\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n};\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n}));\n\nexport const AppDrawer = ({isOpen, onChevronClick, children}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Drawer\n      data-testid=\"app-drawer\"\n      className={classes.drawer}\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={isOpen}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <Typography>Photo Categories</Typography>\n        <IconButton onClick={onChevronClick}>\n          {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n        </IconButton>\n      </div>\n      <Divider />\n      {children}\n    </Drawer>\n  )\n}\n","import GridList from '@material-ui/core/GridList';\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    gridList: {\n      width: '100vw',\n      height: `calc(100vh - 64px)`,\n      margin: '0px!important'\n    },\n  }),\n);\n\nexport const AppGallery = ({children}) => {\n  const classes = useStyles();\n  return (\n    <GridList\n      cellHeight={250}\n      className={classes.gridList}\n      cols={3}>\n      {children}\n    </GridList>\n  )\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fade from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Fade direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const AppDialog = ({isOpen, onClose, children, title}) => {\n  return (\n      <Dialog\n        open={isOpen}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          {children}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n","\nexport const convertSelectedImgObj = (selectedImage) => {\n\n  const bestTitle = selectedImage.sponsorship?.tagline ||\n    (selectedImage.alt_description?.length < selectedImage.description?.length ?\n    selectedImage.alt_description : selectedImage.description);\n\n  return {\n    color: selectedImage.color,\n    createdAt: selectedImage.created_at,\n    description: bestTitle,\n    altDescription: selectedImage.alt_description,\n    downloadLink: `${selectedImage.urls.raw}.jpg`,\n    regularImgLink: selectedImage.urls.regular,\n    id: selectedImage.id\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport Unsplash from 'unsplash-js';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport './App.css';\n\nimport { AppHeader } from './components/AppHeader';\nimport { AppDrawer } from './components/AppDrawer';\nimport { AppGallery } from './components/AppGallery';\nimport { AppDialog } from './components/AppDialog';\n\nimport { convertSelectedImgObj } from './utilities/util';\n\nconst unsplash = new Unsplash({accessKey: '5fbJEJMCsbZS_Mu4TEgdd5vFf0vr56KeKOjonKLplc0'});\n\nfunction App() {\n  const photoCategories = ['Stars', 'People', 'Mountains', 'Lakes', 'Animals', 'Trees'];\n\n  const [imageSearchResults, updateImageSearchResults] = useState([]);\n  const [openDrawer, setDrawerState] = useState(false);\n  const [headerText, setHeaderText] = useState('Photo Search');\n  const [isDialogOpen, setDialogState] = useState(false);\n  const [selectedImage, setSelectedImage] = useState({});\n\n  const requestImages = (queryString) =>\n    unsplash.search.photos(queryString, 1, 15)\n      .then(res => res.json())\n      .then((res) => {\n        updateImageSearchResults(res.results.map(convertSelectedImgObj))\n      });\n\n  const inputImageSearch = (e) => e.key === 'Enter'\n    ? requestImages(e.target.value)\n    : null;\n\n  useEffect(() => {\n    requestImages('dogs');\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <AppDrawer\n        isOpen={openDrawer}\n        onChevronClick={() => setDrawerState(false)}\n      >\n        <List>\n          {photoCategories.map((text, index) => (\n            <ListItem\n              onClick={() => {\n                requestImages(text);\n                setHeaderText(text);\n                setDrawerState(false);\n              }}\n              button\n              key={text}>\n              <ListItemText primary={text}/>\n            </ListItem>\n          ))}\n        </List>\n      </AppDrawer>\n      <AppHeader\n        headerText={headerText}\n        shrinkAppHeader={openDrawer}\n        onMenuClick={() => setDrawerState(!openDrawer)}\n        onSearchKeyUp={(e) => {\n          inputImageSearch(e);\n          setHeaderText(e.target.value);\n        }}\n      />\n      <AppGallery>\n        {imageSearchResults.map((imgObj) => (\n          <GridListTile\n            className=\"grid-list-tile\"\n            onClick={() => {\n              setSelectedImage(imgObj);\n              setDialogState(true);\n            }}\n            key={imgObj.id}\n            cols={1}>\n            <img\n              src={imgObj.regularImgLink}\n              alt={imgObj.altDescription}/>\n          </GridListTile>\n        ))}\n      </AppGallery>\n      <AppDialog\n        title={selectedImage.description || 'Untitled'}\n        isOpen={isDialogOpen}\n        onClose={() => {\n          setDialogState(false);\n        }}\n      >\n        <DialogContentText id=\"alert-dialog-description\">\n          <span className=\"dialog-item-row\">\n            <span>Primary Image Colour: </span>\n            <span style={{backgroundColor: selectedImage.color}} className=\"color-block\"/>\n          </span>\n          <span className=\"dialog-item-row\">\n            <span>Creation Date: </span>\n            <span> {(new Date(selectedImage.createdAt)).toLocaleDateString()} </span>\n          </span>\n          <span className=\"dialog-item-row\">\n            <span>Download Link: </span>\n            <a\n              href={selectedImage.downloadLink}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n              download\n            >\n              Click Here\n            </a>\n          </span>\n        </DialogContentText>\n      </AppDialog>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}